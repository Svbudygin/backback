"""telegram_chat_id

Revision ID: 79aca8658dcb
Revises: ee4d42f384e2
Create Date: 2024-10-22 17:20:38.963246

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy import text

# revision identifiers, used by Alembic.
revision: str = '79aca8658dcb'
down_revision: Union[str, None] = 'ee4d42f384e2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    conn = op.get_bind()

    geo_id = conn.execute(text("SELECT id FROM geo WHERE name = 'ru';")).scalar_one()

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('telegram_verifier_chat_id',
        sa.Column('geo_id', sa.Integer(), nullable=False),
        sa.Column('namespace_id', sa.Integer(), nullable=False),
        sa.Column('chat_id', sa.String(length=64), nullable=False),
        sa.ForeignKeyConstraint(['geo_id'], ['geo.id'], ),
        sa.ForeignKeyConstraint(['namespace_id'], ['namespaces.id'], ),
        sa.PrimaryKeyConstraint('geo_id', 'namespace_id')
    )
    op.drop_index('bank_detail_model_offset_id_index', table_name='bank_detail_model')
    op.create_index('bank_detail_model_offset_id_index', 'bank_detail_model', ['number', 'bank', 'type', 'is_deleted'],
                    unique=False)
    op.create_unique_constraint(None, 'geo', ['id'])
    op.add_column('merchants', sa.Column('geo_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'merchants', 'geo', ['geo_id'], ['id'])

    conn.execute(text(f"UPDATE merchants SET geo_id = {geo_id}"))

    op.drop_column('merchants', 'telegram_verifier_chat_id')
    op.create_unique_constraint(None, 'namespaces', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'namespaces', type_='unique')
    op.add_column('merchants',
                  sa.Column('telegram_verifier_chat_id', sa.VARCHAR(length=64), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'merchants', type_='foreignkey')
    op.drop_column('merchants', 'geo_id')
    op.drop_constraint(None, 'geo', type_='unique')
    op.drop_index('bank_detail_model_offset_id_index', table_name='bank_detail_model')
    op.create_index('bank_detail_model_offset_id_index', 'bank_detail_model', ['offset_id'], unique=False)
    op.drop_table('telegram_verifier_chat_id')
    # ### end Alembic commands ###
